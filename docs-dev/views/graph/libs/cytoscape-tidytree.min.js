"use strict";(()=>{var l=class r{lowY;index;nxt;constructor(e,t,n){this.lowY=e,this.index=t,this.nxt=n}static updateIYL(e,t,n){for(;n!=null&&e>=n.lowY;)n=n.nxt;return new r(e,t,n)}},h=class{isExtra;w;h;x;y;c;prelim=0;mod=0;shift=0;change=0;tl;tr;el;er;msel;mser;constructor(e,t,n,i,o=!1){this.w=e,this.h=t,this.y=n,this.c=i,this.isExtra=o}layout(){this.firstWalk(),this.secondWalk(0)}firstWalk(){if(this.c.length==0){this.setExtremes();return}this.c[0].firstWalk();let e=l.updateIYL(this.c[0].el.bottom(),0,void 0);for(let t=1;t<this.c.length;t++){this.c[t].firstWalk();let n=this.c[t].er.bottom();this.separate(t,e),e=l.updateIYL(n,t,e)}this.positionRoot(),this.setExtremes()}setExtremes(){this.c.length==0?(this.el=this,this.er=this,this.msel=this.mser=0):(this.el=this.c[0].el,this.msel=this.c[0].msel,this.er=this.c[this.c.length-1].er,this.mser=this.c[this.c.length-1].mser)}separate(e,t){let n=this.c[e-1],i=n.mod,o=this.c[e],a=o.mod,c=!0;for(;n!==void 0&&o!==void 0;){n.bottom()>t.lowY&&(t=t.nxt);let s=i+n.prelim+n.w-(a+o.prelim);(s>0||c&&s<=0)&&(a+=s,this.moveSubtree(e,t.index,s)),c=!1;let d=n.bottom(),u=o.bottom();d<=u&&(n=n.nextRightContour(),n!==void 0&&(i+=n.mod)),d>=u&&(o=o.nextLeftContour(),o!==void 0&&(a+=o.mod))}n==null&&o!=null?this.setLeftThread(e,o,a):n!=null&&o==null&&this.setRightThread(e,n,i)}moveSubtree(e,t,n){this.c[e].mod+=n,this.c[e].msel+=n,this.c[e].mser+=n,this.distributeExtra(e,t,n)}nextLeftContour(){return this.c.length==0?this.tl:this.c[0]}nextRightContour(){return this.c.length==0?this.tr:this.c[this.c.length-1]}bottom(){return this.y+this.h}setLeftThread(e,t,n){let i=this.c[0].el;i.tl=t;let o=n-t.mod-this.c[0].msel;i.mod+=o,i.prelim-=o,this.c[0].el=this.c[e].el,this.c[0].msel=this.c[e].msel}setRightThread(e,t,n){let i=this.c[e].er;i.tr=t;let o=n-t.mod-this.c[e].mser;i.mod+=o,i.prelim-=o,this.c[e].er=this.c[e-1].er,this.c[e].mser=this.c[e-1].mser}positionRoot(){this.prelim=(this.c[0].prelim+this.c[0].mod+this.c[this.c.length-1].mod+this.c[this.c.length-1].prelim+this.c[this.c.length-1].w)/2-this.w/2}secondWalk(e){e+=this.mod,this.x=this.prelim+e,this.addChildSpacing();for(let t of this.c)t.secondWalk(e)}distributeExtra(e,t,n){if(t!=e-1){let i=e-t;this.c[t+1].shift+=n/i,this.c[e].shift-=n/i,this.c[e].change-=n-n/i}}addChildSpacing(){let e=0,t=0;for(let n of this.c)e+=n.shift,t+=e+n.change,n.mod+=t}};var m=class{options;constructor(e){this.options={horizontalSpacing:10,verticalSpacing:20,lineWidth:3,layerHeight:void 0,...e}}run(e){let t=this.makeTree(e,e.customY);return t.layout(),this.setLayoutResult(e,t),t}makeTree(e,t=0){let n=e.w+this.options.horizontalSpacing,i=e.h+this.options.verticalSpacing,o=e.extraVerticalSpacing??0,a=this.options.layerHeight;a!==void 0&&(i=Math.ceil(i/a)*a,o=Math.round(o/a)*a),e.customY!==void 0&&(o=e.customY-t,e.y=t+o),e.y=t+o;let c=new h(n,i,e.y,e.children.map(s=>this.makeTree(s,e.y+i)));return o<0&&console.warn("Node has negative extra space, ignoring",e),o>0?new h(this.options.lineWidth,o,t,[c],!0):c}setLayoutResult(e,t){t.isExtra&&(t=t.c[0]),e.x=t.x+this.options.horizontalSpacing/2,e.children.forEach((n,i)=>this.setLayoutResult(n,t.c[i]))}};var f=class{name="tidytree";dataOnly=!1;horizontalSpacing=20;verticalSpacing=40;extraVerticalSpacings={};customYs={};lineWidth=5;layerHeight=void 0;edgeComparator=void 0;sizeGetter=()=>({});fit=!0;padding=30;pan=void 0;zoom=void 0;spacingFactor=1;transform=(e,t)=>t;animate=!1;animationDuration=500;animationEasing=void 0;animateFilter=()=>!0;ready=void 0;stop=void 0;nodeDimensionsIncludeLabels=!0};function p(r){this.options={...new f,...r}}p.prototype.createTreeData=function(){let r=this.options.nodeDimensionsIncludeLabels??!0,e=this.options.eles,t=this.options.customYs,n=this.options.extraVerticalSpacings,i=new Set;for(let s of e.nodes()){let d={...s.layoutDimensions({nodeDimensionsIncludeLabels:r}),...this.options.sizeGetter(s)},u={id:s.id(),w:d.w,h:d.h,children:[],extraVerticalSpacing:n[s.id()],customY:t[s.id()]===void 0?void 0:t[s.id()]-d.h/2};s.scratch("tidytree",u),i.add(u)}let o=this.options.edgeComparator,a=o===void 0?e.edges():e.edges().sort(o);for(let s of a){let d=s.source().scratch("tidytree"),u=s.target().scratch("tidytree");d.children.push(u),i.delete(u)}return{w:0,h:0,children:Array.from(i),customY:Math.min(-this.options.verticalSpacing,-(this.options.layerHeight??0))}};p.prototype.run=function(){let r=this.createTreeData(),e=new m(this.options).run(r),t=this.options.eles.nodes();return this.options.dataOnly||t.layoutPositions(this,this.options,n=>{let i=n.scratch("tidytree");return{x:i.x+i.w/2,y:i.y+i.h/2}}),{treeData:r,tree:e}};function y(r){r("layout","tidytree",p)}typeof window.cytoscape<"u"&&y(window.cytoscape);})();
//# sourceMappingURL=cytoscape-tidytree.min.js.map
